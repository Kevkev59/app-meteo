{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceMeteoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://api.open-meteo.com/v1/forecast';\n  }\n  getPrevisionsMeteo(latitude, longitude) {\n    const url = `${this.apiUrl}?latitude=${latitude}&longitude=${longitude}&timezone=auto&daily=sunrise,sunset,uv_index_max,uv_index_clear_sky_max&hourly=temperature_2m,relativehumidity_2m,windspeed_10m,winddirection_10m,weathercode,visibility,is_day&current_weather=true`;\n    return this.http.get(url);\n  }\n}\nServiceMeteoService.ɵfac = function ServiceMeteoService_Factory(t) {\n  return new (t || ServiceMeteoService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceMeteoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceMeteoService,\n  factory: ServiceMeteoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAI9BC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHN,WAAM,GAAG,wCAAwC;EAIpD;EAELC,kBAAkB,CAACC,QAAgB,EAAEC,SAAiB;IACpD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,aAAaH,QAAQ,cAAcC,SAAS,sMAAsM;IAE5Q,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAOF,GAAG,CAAC;EACjC;;AAZWN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAS,SAAnBT,mBAAmB;EAAAU,YAFlB;AAAM","names":["ServiceMeteoService","constructor","http","getPrevisionsMeteo","latitude","longitude","url","apiUrl","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Apprenant\\Documents\\app-meteo\\src\\app\\services\\service-meteo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrentWeather, Root } from 'src/app/models/meteo';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceMeteoService {\r\n\r\n  private apiUrl = 'https://api.open-meteo.com/v1/forecast';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    ) {}\r\n\r\n  getPrevisionsMeteo(latitude: number, longitude: number): Observable<Root> {\r\n    const url = `${this.apiUrl}?latitude=${latitude}&longitude=${longitude}&timezone=auto&daily=sunrise,sunset,uv_index_max,uv_index_clear_sky_max&hourly=temperature_2m,relativehumidity_2m,windspeed_10m,winddirection_10m,weathercode,visibility,is_day&current_weather=true`;\r\n\r\n    return this.http.get<Root>(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}